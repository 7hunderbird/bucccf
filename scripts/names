#!/bin/bash

pushd () {
    command pushd "$@" > /dev/null
}

popd () {
    command popd "$@" > /dev/null
}

REPO_BUCC=$PWD/src/bucc
REPO_BOSH=$PWD/src/bosh-deployment
REPO_CF=$PWD/src/cf-deployment

# pushd $REPO_BUCC

source .envrc

# create a jq-path alias
# to do this we need to set the "expand_aliases" shell option
# and then define the alias

shopt -s expand_aliases
alias jq-path="jq '[path(..)|map(if type==\"number\" then \"[]\" else tostring end)|join(\".\")|split(\".[]\")|join(\"[]\")]|unique|map(\".\"+.)|.[]'"

# let's create a list from the `state/cf-deployment-vars.yml` file.
# use yq to convert to json
# structure it for jq
# use jq-path to get a map of paths
# filter match '.ca"' values
# filter keep everything but '_ca' values
# remove double quotes
# substitute "[.]" with "/" to `/path/ca`

certificates=$(yq read state/cf-deployment-vars.yml -j | jq | jq-path | grep -e '.certificate"' | grep -E -v -- '_certificate' | sed 's/"//g' | awk '{ gsub("[.]","/",$0); print $0 }' )

for certificate in $certificates
do

    subject_common_name=$(openssl x509 -in <(bosh interpolate state/cf-deployment-vars.yml --path $certificate) -text -noout | grep -e 'Subject:' | awk '{ print $5 }')
    san=$(openssl x509 -in <(bosh interpolate state/cf-deployment-vars.yml --path $certificate) -text -noout | awk '/X509v3 Subject Alternative Name/ {getline;gsub(/ /, "", $0); print}' | tr -d "DNS:")
    echo $certificate $subject_common_name $san 
done

# popd